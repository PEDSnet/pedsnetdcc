import logging
import time
import re

from pedsnetdcc.db import StatementSet, Statement, StatementList
from pedsnetdcc.dict_logging import secs_since
from pedsnetdcc.schema import (primary_schema)
from pedsnetdcc.utils import (check_stmt_err, check_stmt_data, combine_dicts,
                              get_conn_info_dict, vacuum, stock_metadata)

logger = logging.getLogger(__name__)
RECOVER_COHORT_SQL = """
    create table {0}.recover_cohort as
    /* COVID lab tests */
    select distinct person_id
    from {0}.measurement
    where measurement_concept_id in
    (586516, 586517, 586518, 586519, 586520, 586523, 586524, 586525, 586526, 586528,
    586529, 700360, 706154, 706155, 706156, 706157, 706158, 706159, 706160, 706161,
    706163, 706165, 706165, 706166, 706167, 706168, 706169, 706170, 706171, 706172,
    706173, 706174, 706175, 715260, 715261, 715262, 715272, 723463, 723464, 723465,
    723466, 723467, 723468, 723469, 723470, 723471, 723472, 723476, 723477, 723478,
    757677, 757678, 757685, 3031852, 36031213, 36031238, 36031453, 36031506,
    36031652, 36031814, 36031944, 36032061, 36032174, 36032258, 36032286, 36032295,
    36032352, 36032419, 36033640, 36033641, 36033642, 36033644, 36033645, 36033646,
    36033648, 36033649, 36033650, 36033651, 36033652, 36033653, 36033655, 36033656,
    36033658, 36033659, 36033660, 36033662, 36033663, 36033664, 36033665, 36033667,
    36660752, 36660800, 36660801, 36660882, 36660887, 36660902, 36660907, 36660924,
    36660927, 36660953, 36660966, 36660970, 36661011, 36661036, 36661115, 36661148,
    36661184, 36661194, 36661244, 36661250, 36661286, 36661317, 36661348, 36661370,
    36661371, 36661377, 36661378, 40218804, 40218805 , 586515, 586521, 586522,
    586527, 704058, 704059, 706176, 706177, 706178, 706179, 706180, 706181, 723459,
    723473, 723474, 723475, 723479, 723480, 742224, 757679, 757680, 757686, 1617634,
    1619027, 1619028, 1619029, 3031372, 3033147, 3034068, 3034613, 3561696, 3574628,
    3574629, 3574630, 3574631, 3574632, 3574633, 36031197, 36031734, 36031944,
    36031956, 36031969, 36032301, 36032309, 36033618, 36033666, 36659631, 36660768,
    36660777, 36660905, 36660914, 36660931, 36661046, 36661053, 36661105, 36661216,
    36661221, 36661273, 36661274, 36661322, 36661356, 36661369, 36661372, 36661373,
    36661374, 37030343, 37050084, 37310270, 40774339, 40781068, 43009141, 43009341,
    43010149, 43010175, 43010418, 43010456, 43010804, 43010813, 43011213, 43011346,
    43011385, 2000001501, 2000001502, 2000001503, 2000001512, 2000001513,
    2000001514, 2000001515)
    union
    /* COVID diagnoses including MIS-C and PASC */
    select distinct person_id
    from {0}.condition_occurrence
    where condition_concept_id in
    (320651, 439676, 703578, 704996, 713856, 756022, 756023, 756027, 756031, 756035,
    756037, 756039, 756041, 756044, 756045, 756047, 756050, 756061, 756062, 756064,
    756068, 756069, 756072, 756075, 756076, 756077, 756079, 756081, 756082, 756083,
    3655975, 3655976, 3655977, 3656667, 3656668, 3656669, 3661405, 3661406, 3661408,
    3661632, 3661748, 3661885, 3662381, 3663281, 4100065, 4248811, 37016927,
    37310254, 37310260, 37310283, 37310284, 37310285, 37310286, 37310287, 37311059,
    37311060, 37311061, 37311065, 37396171, 40479642, 40479782, 45763594, 45765578,
    314381, 35615119, 703578, 488007, 18484008, 22653005, 30496006, 37925008,
    46701001, 50920009, 55087008, 60812006, 79096004, 89141000, 91025000, 194942007,
    195136004, 266238009, 427372006, 427443009, 703274008, 871640001,
    304541000009102, 1240531000000103, 312334, 312928, 315293, 320116, 321586,
    4006977, 4030730, 4048055, 4067471, 4070323, 4071283, 4072086, 4103288, 4121476,
    4138837, 4155486, 4165259, 4173818, 4217075, 4218568, 4237738, 4245386, 4289908,
    4314708, 35624116, 42574211, 42595740, 43021067, 43021290, 43021291, 44782774,
    705076)
    union
    /* respiratory diagboses after 1/1/2020 */
    select distinct condition_occurrence.person_id
    from {0}.condition_occurrence
    inner join {0}.visit_occurrence
          on condition_occurrence.visit_occurrence_id=visit_occurrence.visit_occurrence_id 
    where visit_start_date >= '01-01-2019'
          and condition_concept_id in
    (45552897, 35208069, 40396486, 4195694, 4025173, 40396482, 261881, 46273437,
    4024117, 35211275, 254761, 4208807, 257905, 35208015, 4028970, 40395537,
    4197404, 4112360, 4112359, 4233924, 256451, 40316059, 260125, 46270376, 260139,
    37206139, 4232302, 40345740, 4049963, 35207965, 4312602, 45605884, 256449,
    45543261, 258780, 1569485, 35207970, 4218289, 4148123, 4112826, 4320830,
    46269701, 35208017, 317009, 4051332, 4110485, 35207964, 4112362, 4233784,
    45562445, 255841, 4110056, 4110022, 4322815, 4137525, 45586671, 40481763,
    4008725, 45572167, 35208014, 35207959, 439298, 35208023, 40316590, 4121456,
    4112015, 40316056, 40394953, 4148204, 4110045, 45562444, 40362681, 4270139,
    37017852, 4243199, 256448, 45548108, 261889, 45586664, 35207961, 4058712,
    40316062, 45755455, 35207962, 45562458, 40394976, 40316058, 1569470, 37017003,
    4112521, 45581849, 4110484, 260134, 35207957, 4110486, 4052543, 45552883,
    4208810, 4307774, 35207966, 40395854, 35208052, 45581850, 4112522, 35208013,
    35207963, 4099911, 40395540, 4049964, 4112523, 4170144, 4110044, 4233477,
    40395539, 320136, 40394965, 35208016, 4195736, 35208108, 4146838, 45562446,
    40394990, 40316060, 35207968, 4112361, 4110022, 1569471, 4045589, 35207967,
    4237921, 45548109, 45591563, 260125, 260139, 45581851, 4052544, 35207969,
    4328679, 40482069, 46269741, 920135, 4052545, 254058, 45552884, 4035960,
    45567262, 43021998, 4112525, 4045227, 4165112, 4112837, 4215773, 4112362,
    40316058, 45534422, 312437, 4263848, 4249735, 4249735, 437663, 377101, 377101,
    45577799, 35211385, 4226022, 437663, 35211387, 45597190, 35211386, 444413,
    37394478, 763012, 40303821, 45543255, 4237779, 4266367, 45557617, 764967,
    45601117, 765125, 764942, 4223225, 37016926, 42872723, 4110043, 45581845,
    4110634, 4299935, 46273463, 36714570, 45757528, 45548102, 45548103, 40345753,
    4183609, 45581841, 42872724, 4110511, 764950, 45586660, 45770619, 36676238,
    45591541, 920133, 40365652, 40395532, 4338956, 46272714, 45768913, 40316526,
    4176911, 40325150, 40484544, 40483537, 765607, 46270122, 45605882, 37394476,
    45605881, 45755450, 45576944, 45533544, 4112824, 45596276, 45576945, 46269706,
    40389698, 45586658, 45755449, 1569459, 46270318, 4262075, 4080680, 45581844,
    764938, 46272887, 37394479, 4112665, 45538475, 4112664, 45581842, 45548104,
    44783879, 4080680, 45586661, 1569463, 40636737, 46271784, 45765521, 4301755,
    1569464, 45591544, 46273956, 45601121, 45548101, 37394477, 314979, 763011,
    4110512, 4146943, 36676221, 45601118, 4186568, 45562439, 46270121, 40375021,
    4153160, 4304374, 4319159, 45596275, 45557616, 4112663, 45572159, 4144103,
    764964, 920134, 46273463, 45773008, 255848, 45591543, 45586659, 4235537,
    45572160, 42537960, 40468330, 764960, 320752, 45601119, 35207931, 4112825,
    46270491, 45591542, 37394478, 40276903, 764962, 4262073, 4261801, 45543254,
    35207930, 45562438, 45591546, 4304374, 46269741, 36714388, 46270128, 37394476,
    36676233, 765646, 312664, 40316532, 4110042, 45601120, 1569462, 45562440,
    4208931, 1569461, 4207452, 40316530, 37394477, 40642055, 40389700, 256723,
    45591545, 45755451, 37394479, 8689, 45552878, 45771050, 1569458, 40316514,
    45581843, 40345755, 1569460, 46270120, 4252885, 4112662, 46270123, 45567259,
    40316527, 45572163, 44813169, 45567274, 45552902, 35207952, 4154776, 4110041,
    4110510, 45538476, 46269708, 4190647, 45548107, 4145369, 40553892, 45548106,
    4141404, 40614339, 45562441, 40479642, 40376581, 40396941, 46269726, 35207951,
    4203846, 45586662, 40276913, 4334649, 37016927, 4116487, 1569467, 4052548,
    4051337, 40316593, 45542528, 254677, 45552879, 45543256, 35207938, 4110038,
    40316525, 4237183, 4256894, 40395474, 436145, 135183, 46269708, 4245006,
    40489912, 4231983, 4293463, 4280213, 45562443, 35207936, 4311555, 4226502,
    45605883, 45542529, 45591551, 35207933, 4171251, 4080883, 37017278, 46269726,
    252351, 45562442, 40490793, 4045227, 40345753, 46269721, 44782989, 4221503,
    36714118, 4112659, 261326, 45601123, 258333, 35210488, 35207941, 35207935,
    4306082, 4135197, 4044215, 40396937, 35207954, 45601122, 35207955, 4048518,
    40376608, 45586680, 40395490, 45755452, 45763750, 45533545, 4049279, 4112661,
    40395479, 37017277, 40395491, 4215807, 4112823, 45586663, 4309106, 46269725,
    46269709, 4112656, 4273378, 45572162, 46269714, 46269711, 45591550, 4051333,
    4112657, 46269724, 4245499, 35205735, 45591547, 45770900, 45581847, 259992,
    4114030, 4236311, 40481335, 45567260, 46270510, 4112665, 35207934, 37116366,
    40316519, 4341520, 35207932, 4223032, 40395518, 440431, 35207953, 4195014,
    1569468, 45552881, 261324, 40435884, 4245828, 40395517, 4049965, 37017248,
    4195452, 259852, 35207948, 4116488, 256722, 4205578, 45556897, 40605924,
    4240452, 40607612, 40316518, 45562465, 40435891, 443410, 4110039, 4276663,
    35207942, 45543258, 4117114, 45552880, 45572161, 45543274, 4050869, 4141619,
    40316520, 46269714, 432352, 46274035, 40395513, 4170622, 4148529, 35207947,
    257315, 45532808, 35207943, 40396934, 40482061, 4043934, 45533546, 40345754,
    46269709, 1569465, 45556911, 46269712, 4175598, 45543260, 45757206, 4050872,
    252949, 35205746, 37019058, 35207946, 4225318, 35207956, 45591552, 4138244,
    45765951, 45552235, 4112660, 439857, 45572164, 4204819, 40620562, 46269724,
    255848, 45571459, 43020558, 4112818, 46269712, 37397158, 4256236, 4166072,
    40396940, 36685503, 36712839, 40480033, 46270027, 4025165, 4110505, 40395533,
    258785, 4048519, 45556887, 35208076, 4112825, 4124677, 4048052, 4133224,
    4112819, 252655, 40395495, 4284985, 35207937, 4310964, 40316515, 46269954,
    37017354, 45757250, 4174308, 40316521, 4248807, 37397168, 40396931, 45557618,
    37397157, 45601135, 4200891, 44797302, 4138769, 45581145, 4274802, 4212120,
    4143092, 46269693, 40316532, 45567261, 40527956, 4112658, 45763749, 4112654,
    46269721, 45557621, 46269718, 256723, 1569466, 46269711, 4046011, 253235,
    4114031, 45600409, 4102253, 4144102, 46269718, 45557619, 4110506, 1569469,
    40396933, 40396936, 4309160, 40316516, 259849, 40316514, 4048517, 4021760,
    46269725, 40396935, 45767051, 4112662, 35207950, 45557620, 36685503, 4228277,
    319138, 1326788, 1571990, 45606697, 4191650, 40555260, 45577700, 45582613,
    35210487, 4158346, 258866, 45772947, 35210484, 40273838, 4048463, 40322980,
    4147117, 45597070, 260212, 40322988, 4154698, 35210486, 40298515, 40352280,
    45538487, 45543283, 46273719, 45605907, 4140438, 318459, 4166914, 44799165,
    45577701, 35208100, 4148486, 45558451, 40321016, 45587419, 45562471, 46271075,
    37016114, 45581868, 4119934, 45596290, 4077195, 314971, 4011359, 35208099,
    37395564, 36716978, 45538490, 317109, 40321014, 35208101, 45596289, 37395564,
    4317960, 35615340, 42539533, 40321017, 319138, 44808850, 45533563, 45548131,
    45576964, 35210515, 46271074, 4256228, 313590, 4007901, 45572177, 4110550,
    4279614, 318856, 4266019, 45567283, 319049, 4070545, 45605906, 1569515,
    40601807, 4177862, 45538489, 45605905, 40396917, 45586686, 40402988, 312940,
    44802329, 45557632, 40396498, 37399087, 44813043, 45567284, 40405345, 44808847,
    35208102, 35211287, 440029, 4150370, 35208011, 4110362, 4085100, 137900,
    45755453, 4181583, 255566, 35205797, 1569444, 45538473, 46271527, 1569441,
    4193318, 139850, 45572158, 45591539, 260427, 4110512, 45562432, 254761,
    45533539, 35207924, 441321, 35207926, 132553, 1569457, 45552877, 4273095,
    45538469, 35207975, 35207922, 4197268, 45562431, 35211275, 260123, 4173027,
    1569445, 35207925, 1569447, 141056, 4110479, 1569454, 4301754, 45601115,
    35207927, 433513, 1569452, 46273463, 45581839, 35207928, 1569474, 257011,
    45581840, 23798, 258453, 45538472, 4183609, 4035987, 30133, 45576941, 45533536,
    1569440, 45543253, 4173734, 1569450, 45538471, 4193918, 28060, 46270491,
    4207185, 1569456, 45533542, 45561778, 4063381, 1569449, 35205803, 45576943,
    4318117, 45533540, 437903, 45533538, 45567258, 254068, 435840, 45601113,
    46270516, 46270122, 1569442, 45601126, 4212727, 35208012, 45538478, 4226263,
    45562434, 1569453, 45538470, 1569446, 46270122, 4112343, 260134, 45601116,
    45596274, 26711, 35207976, 45557615, 45533541, 45562437, 31597, 1569443,
    45557614, 46270491, 46273463, 45562435, 45538468, 45591540, 35207923, 45548100,
    4048489, 1569448, 45576940, 4105773, 1569451, 4112006, 45562436, 45576939,
    141323, 24660, 35207929, 35207921, 25297, 35205756, 45572157, 4294548, 4147326,
    4043671, 4283893, 25297, 4329087)
    union
    /* Procedure codes (non-standard) for COVID-19 vaccines */
    select distinct person_id
    from {0}.procedure_occurrence
    where procedure_concept_id in
    (759428, 759429, 759430, 759431, 759433, 759434, 759435, 759725, 759726, 759727,
    759728, 759729, 759735, 759736, 759737, 759738, 759739, 766231, 766232, 766233,
    766234, 766235, 766236, 766237, 766238, 766239, 766240, 766241)
    union
    /* CVX codes for vaccination  */
    select distinct person_id
    from {0}.immunization
    where immunization_concept_id in
    (724906, 724907, 724905, 724904, 702866, 702677, 702678, 702679)
    union
    /* Drug codes for vaccines */
    select distinct person_id
    from {0}.drug_exposure
    where drug_concept_id in
    (739902, 739903, 739905, 739906, 37003432, 37003433, 37003435, 37003436, 37003517,
    37003518)
    ;
"""


def run_recover_cohort(conn_str, site, search_path, model_version):
    """Run the Condition or Drug Era derivation.

    * Execute SQL
    * Vacuum output table

    :param str conn_str:      database connection string
    :param str site:    site to run derivation for
    :param str search_path: PostgreSQL schema search path
    :param str model_version: pedsnet model version, e.g. 2.3.0
    :returns:                 True if the function succeeds
    :rtype:                   bool
    :raises DatabaseError:    if any of the statement executions cause errors
    """

    conn_info_dict = get_conn_info_dict(conn_str)

    # Log start of the function and set the starting time.
    logger_msg = 'Creating RECOVER Cohort for {0}'
    log_dict = combine_dicts({'site': site},
                             conn_info_dict)
    logger.info(combine_dicts({'msg': logger_msg.format(site)},
                              log_dict))
    start_time = time.time()
    schema = primary_schema(search_path)

    stmts = StatementSet()

    # Run the query
    logger.info({'msg': 'run RECOVER cohort query for {0}'.format(site)})
    run_query_msg = "running RECOVER cohort query for {0}"

    # run query
    recover_query_stmt = Statement(RECOVER_COHORT_SQL.format(schema), run_query_msg.format(site))

    # Execute the query and ensure it didn't error
    recover_query_stmt.execute(conn_str)
    check_stmt_err(recover_query_stmt, 'run RECOVER query for {0}'.format(site))
    logger.info({'msg': 'RECOVER cohort complete for {0}'.format(site)})

    # Log end of function.
    logger.info(combine_dicts({'msg': logger_msg.format("finished", site),
                               'elapsed': secs_since(start_time)}, log_dict))

    # If reached without error, then success!
    return True
